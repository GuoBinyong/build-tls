{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.28.5",
    "schemaVersion": 1009,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@betaDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@internalRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@preapproved",
          "syntaxKind": "modifier"
        }
      ],
      "supportForTags": {
        "@alpha": true,
        "@beta": true,
        "@defaultValue": true,
        "@decorator": true,
        "@deprecated": true,
        "@eventProperty": true,
        "@example": true,
        "@experimental": true,
        "@inheritDoc": true,
        "@internal": true,
        "@label": true,
        "@link": true,
        "@override": true,
        "@packageDocumentation": true,
        "@param": true,
        "@privateRemarks": true,
        "@public": true,
        "@readonly": true,
        "@remarks": true,
        "@returns": true,
        "@sealed": true,
        "@see": true,
        "@throws": true,
        "@typeParam": true,
        "@virtual": true,
        "@betaDocumentation": true,
        "@internalRemarks": true,
        "@preapproved": true
      },
      "reportUnsupportedHtmlElements": false
    }
  },
  "kind": "Package",
  "canonicalReference": "build-tls!",
  "docComment": "/**\n * 专门用于构建的相关工具\n *\n * @remarks\n *\n * 本库封装了前端构建时常用的工具、函数等\n *\n * @packageDocumentation\n */\n",
  "name": "build-tls",
  "preserveMemberOrder": false,
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "build-tls!",
      "name": "",
      "preserveMemberOrder": false,
      "members": [
        {
          "kind": "Function",
          "canonicalReference": "build-tls!copy_d_ts:function(1)",
          "docComment": "/**\n * 拷贝 TypeScript 的类型声明文件\n *\n * @remarks\n *\n * 将 源目录 中 TypeScript 类型声明文件 拷贝到 目标目录下。 如果源目录下的子目录中没有 类型声明文件，则也会在目标目录下创建空的文件夹。\n *\n * @param src - 源目录\n *\n * @param dest - 目标目录\n *\n * @param options - 选项\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function copy_d_ts(src: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", dest: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", options?: "
            },
            {
              "kind": "Reference",
              "text": "CopyOptions",
              "canonicalReference": "build-tls!CopyOptions:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<void>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 9
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "src",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "dest",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "options",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": true
            }
          ],
          "name": "copy_d_ts"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "build-tls!CopyOptions:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type CopyOptions = "
            },
            {
              "kind": "Reference",
              "text": "NonNullable",
              "canonicalReference": "!NonNullable:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Parameters",
              "canonicalReference": "!Parameters:type"
            },
            {
              "kind": "Content",
              "text": "<typeof "
            },
            {
              "kind": "Reference",
              "text": "cp",
              "canonicalReference": "!\"\\\"fs/promises\\\"\".cp:function"
            },
            {
              "kind": "Content",
              "text": ">[2]> & {\n    exclude?: string[] | null;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "CopyOptions",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "build-tls!DtsBundleOptions:interface",
          "docComment": "/**\n * dts-bundle-generator 的选项，详情请看{@link https://github.com/timocov/dts-bundle-generator}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface DtsBundleOptions "
            }
          ],
          "releaseTag": "Public",
          "name": "DtsBundleOptions",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "build-tls!DtsBundleOptions#config:member",
              "docComment": "/**\n * dts-bundle-generator 的配置文件路径\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "config?: "
                },
                {
                  "kind": "Content",
                  "text": "string | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "config",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "build-tls!DtsBundleOptions#disableSymlinksFollowing:member",
              "docComment": "/**\n * 禁用将符号链接解析到原始路径。\n *\n * @defaultValue\n *\n * false\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "disableSymlinksFollowing?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "disableSymlinksFollowing",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "build-tls!DtsBundleOptions#entry:member",
              "docComment": "/**\n * 入口文件\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "entry?: "
                },
                {
                  "kind": "Content",
                  "text": "string | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "entry",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "build-tls!DtsBundleOptions#exportReferencedTypes:member",
              "docComment": "/**\n * 默认情况下，所有 `interfaces`、`type` 和 `const enum` 都会被导出。 即使它们没有直接导出，也会导出。该选项允许您可以禁用此行为，以便将导出节点（如果它是）仅从根源文件导出。\n *\n * @defaultValue\n *\n * true\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "exportReferencedTypes?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "exportReferencedTypes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "build-tls!DtsBundleOptions#externalImports:member",
              "docComment": "/**\n * 来自 node_modules 的包名称数组，用于从中导入类型。\n *\n * @remarks\n *\n * 使用的类型将使用 `import { First, Second } from 'library-name';` 导入。 默认情况下，除了内联库和来自 `@types` 的库之外,其它所有库都将被导入的。\n *\n * @example\n * ```ts\n * [\"type-tls\",\"@gby/deepCopy\"],\n * ```\n *\n * @defaultValue\n *\n * undefined\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "externalImports?: "
                },
                {
                  "kind": "Content",
                  "text": "string[] | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "externalImports",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "build-tls!DtsBundleOptions#externalInlines:member",
              "docComment": "/**\n * 从 node_modules 到内联类型的包名称数组。\n *\n * @remarks\n *\n * 使用的类型将内联到输出文件中。\n *\n * @example\n * ```ts\n * [\"type-tls\",\"@gby/deepCopy\"],\n * ```\n *\n * @defaultValue\n *\n * []\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "externalInlines?: "
                },
                {
                  "kind": "Content",
                  "text": "string[] | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "externalInlines",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "build-tls!DtsBundleOptions#externalTypes:member",
              "docComment": "/**\n * 来自 `@types` 的包名称数组，用于通过三斜杠引用指令导入类型。\n *\n * @remarks\n *\n * 默认情况下，所有包都是允许的，并将根据它们的用途使用。\n *\n * @example\n * ```ts\n * [\"type-tls\",\"@gby/deepCopy\"],\n * ```\n *\n * @defaultValue\n *\n * undefined\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "externalTypes?: "
                },
                {
                  "kind": "Content",
                  "text": "string[] | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "externalTypes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "build-tls!DtsBundleOptions#failOnClass:member",
              "docComment": "/**\n * 如果生成的 dts 包含类声明则失败\n *\n * @defaultValue\n *\n * false\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "failOnClass?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "failOnClass",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "build-tls!DtsBundleOptions#inlineDeclareExternals:member",
              "docComment": "/**\n * 启用全局模块的 `declare module` 语句的内联，包含在应该被内联的文件中（所有本地文件和来自内联库的包）\n *\n * @remarks\n *\n * 全局模块指的是 `declare module 'external-module' {}`，并不是 `declare module './internal-module' {}`\n *\n * @defaultValue\n *\n * false\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "inlineDeclareExternals?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "inlineDeclareExternals",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "build-tls!DtsBundleOptions#inlineDeclareGlobal:member",
              "docComment": "/**\n * 启用应内联的文件（所有本地文件和内联库中的包）中包含的 `declare global` 语句的内联。  @default false\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "inlineDeclareGlobal?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "inlineDeclareGlobal",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "build-tls!DtsBundleOptions#noBanner:member",
              "docComment": "/**\n * 不在输出文件中生成 `Generated by dts-bundle-generator` 这样的注释\n *\n * @defaultValue\n *\n * true\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "noBanner?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "noBanner",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "build-tls!DtsBundleOptions#noCheck:member",
              "docComment": "/**\n * Skip validation of generated d.ts file\n *\n * @defaultValue\n *\n * false\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "noCheck?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "noCheck",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "build-tls!DtsBundleOptions#project:member",
              "docComment": "/**\n * 使用的 `tsconfig.json` 文件的路径\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "project?: "
                },
                {
                  "kind": "Content",
                  "text": "string | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "project",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "build-tls!DtsBundleOptions#respectPreserveConstEnum:member",
              "docComment": "/**\n * 允许从每个直接导出的文件中剥离 `const` 关键字 或重新导出）从入口文件`const enum`\n *\n * @defaultValue\n *\n * false\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "respectPreserveConstEnum?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "respectPreserveConstEnum",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "build-tls!DtsBundleOptions#silent:member",
              "docComment": "/**\n * 禁用除错误之外的任何日志记录\n *\n * @defaultValue\n *\n * false\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "silent?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "silent",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "build-tls!DtsBundleOptions#sort:member",
              "docComment": "/**\n * 按升序对输出节点进行排序。\n *\n * @defaultValue\n *\n * false\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sort?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "sort",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "build-tls!DtsBundleOptions#umdModuleName:member",
              "docComment": "/**\n * UMD 模块的名称\n *\n * @remarks\n *\n * 如果指定，则将输出 `export as namespace ModuleName;`\n *\n * @defaultValue\n *\n * undefined\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "umdModuleName?: "
                },
                {
                  "kind": "Content",
                  "text": "string | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "umdModuleName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "build-tls!DtsBundleOptions#verbose:member",
              "docComment": "/**\n * Enable verbose logging\n *\n * @defaultValue\n *\n * false\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "verbose?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "verbose",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "build-tls!DtsBundleOptions#version:member",
              "docComment": "/**\n * 显示版本号\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "version?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "version",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "build-tls!Generate_D_TS_Options:interface",
          "docComment": "/**\n * generate_d_ts 的选项\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface Generate_D_TS_Options extends "
            },
            {
              "kind": "Reference",
              "text": "Tsc_d_ts_Options",
              "canonicalReference": "build-tls!Tsc_d_ts_Options:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "Generate_D_TS_Options",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "build-tls!Generate_D_TS_Options#copyDTS:member",
              "docComment": "/**\n * 是否拷贝项目中已有的 `.d.ts` 文件\n *\n * @defaultValue\n *\n * true\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "copyDTS?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean | null | "
                },
                {
                  "kind": "Reference",
                  "text": "CopyOptions",
                  "canonicalReference": "build-tls!CopyOptions:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "copyDTS",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "build-tls!Generate_D_TS_Options#emptyOutDir:member",
              "docComment": "/**\n * 是否清空输出目录\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "emptyOutDir?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "emptyOutDir",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "build-tls!Generate_D_TS_Options#onExit:member",
              "docComment": "/**\n * 是否要在当前进程将要退出时执行\n *\n * @defaultValue\n *\n * true\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onExit?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onExit",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "build-tls!generate_d_ts:function(1)",
          "docComment": "/**\n * 生成 TypeScript 类型声明文件\n *\n * @remarks\n *\n * 通过 tsc 命令生成 TypeScript 类型声明文件，并且可以拷贝 源目录下的 `.d.ts` 文件到输出目录中。\n *\n * 如果源目录下的子目录中没有 类型声明文件，则也会在目标目录下创建空的文件夹。\n *\n * 注意：tsc 命令本身不会拷贝项目中已有的 `.d.ts` 文件。\n *\n * @param src - 源目录\n *\n * @param dest - 存放生成的 `.d.ts` 的输出目录\n *\n * @param options - 选项\n *\n * @returns 操作完成的 Promise\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function generate_d_ts(src: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", dest: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", options?: "
            },
            {
              "kind": "Reference",
              "text": "Generate_D_TS_Options",
              "canonicalReference": "build-tls!Generate_D_TS_Options:interface"
            },
            {
              "kind": "Content",
              "text": " | null"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<unknown[]>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 8,
            "endIndex": 10
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "src",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "dest",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "options",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "isOptional": true
            }
          ],
          "name": "generate_d_ts"
        },
        {
          "kind": "Function",
          "canonicalReference": "build-tls!onBeforeExit:function(1)",
          "docComment": "/**\n * 在退出之前执行\n *\n * @returns \n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function onBeforeExit(): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<void>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "onBeforeExit"
        },
        {
          "kind": "Function",
          "canonicalReference": "build-tls!removePath:function(1)",
          "docComment": "/**\n * 移除目标\n *\n * @param path - 被移除的文件或文件夹的路径\n *\n * @returns \n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function removePath(path: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<void>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "path",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "removePath"
        },
        {
          "kind": "Interface",
          "canonicalReference": "build-tls!Tsc_d_ts_Options:interface",
          "docComment": "/**\n * tsc_d_ts 的选项\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface Tsc_d_ts_Options "
            }
          ],
          "releaseTag": "Public",
          "name": "Tsc_d_ts_Options",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "build-tls!Tsc_d_ts_Options#comArg:member",
              "docComment": "/**\n * 传给 `tsc` 或 `dts-bundle-generator` 命令的选项\n *\n * @defaultValue\n *\n * \"\"\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "comArg?: "
                },
                {
                  "kind": "Content",
                  "text": "string | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "comArg",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "build-tls!Tsc_d_ts_Options#dtsBundle:member",
              "docComment": "/**\n * dtsBundle 额外选项\n *\n * @remarks\n *\n * 当此选项为真值时，会使用 dts-bundle-generator 来生成单个的类型声明文件\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dtsBundle: "
                },
                {
                  "kind": "Reference",
                  "text": "DtsBundleOptions",
                  "canonicalReference": "build-tls!DtsBundleOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": " | boolean | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "dtsBundle",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "build-tls!Tsc_d_ts_Options#outFile:member",
              "docComment": "/**\n * 作为单一输出文件的名字\n *\n * @remarks\n *\n * 会放在输出目录下\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "outFile?: "
                },
                {
                  "kind": "Content",
                  "text": "string | boolean | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "outFile",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "build-tls!tsc_d_ts:function(1)",
          "docComment": "/**\n * 使用 tsc 生成 类型声明文件\n *\n * @param dest - 输出目录或文件的路径，优先级低于 options.outFile\n *\n * @param options - 选项\n *\n * @returns \n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function tsc_d_ts(dist: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", options?: "
            },
            {
              "kind": "Reference",
              "text": "Tsc_d_ts_Options",
              "canonicalReference": "build-tls!Tsc_d_ts_Options:interface"
            },
            {
              "kind": "Content",
              "text": " | null"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<unknown>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 6,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "dist",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "options",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "isOptional": true
            }
          ],
          "name": "tsc_d_ts"
        }
      ]
    }
  ]
}
